openapi: '3.0.2' # 使用するOpenAPIのバージョン
info:            # API定義全体の説明
  title: blogs system
  description: this is a blogs system for Lighthouse Plan
  version: '1.0'
servers:         # APIを返すサーバーの情報
  - url: https://localhost:8080
paths:           # ここにAPI定義のリストを書いていく
  /register:
    get:
      tags:
        - users
      description: '返回注册界面'
      operationId: getRegisterView
      responses:
        '200':
            description: OK
            content:
              text/html:    
                schema:
                  $ref: "#/components/schemas/RegisterHtml"
    post:
      tags:
        - users
      description: '接受用户注册信息 两次密码一致的话返回login'
      operationId: register
      requestBody:
        required: true
        content:
          text/json:
            schema:
              $ref: "#/components/schemas/Register"
      responses:
          '200':
            description: OK
            content:
              text/html:    
                schema:
                  $ref: "#/components/schemas/Register"    
  
  /login:        # /login でログインの一覧を取得する
    get:
      tags:
        - users
      description: '返回登陆界面'
      operationId: getLoginView
      responses:
        '200':
          description: OK
          content:
            text/html:    
              schema:
                $ref: "#/components/schemas/LoginHtml"  # componentsに定義したスキーマ情報をロード
    post:
      tags:
        - users
      description: '接受用户登陆信息，成功的话返回homepage界面'
      operationId: login
      requestBody: #如果操作发送请求体，使用requestBody关键字来描述请求体内容和媒体类型
        required: true
        content:
          text/json:
            schema:
              $ref: "#/components/schemas/Users"
      responses:
        '200':
          description: OK
          content:
            text/html:    
              schema:
                $ref: "#/components/schemas/Login"     

  /homepage:
    get:
      tags:
        - blogs
      description: '返回博客主界面'
      operationId: getSuccessView
      parameters:
        - in: query
          name: search
          description: '搜索'
          schema:
                type: "object"
                properties:
                  userId:
                    type: "string"
      responses:
        '200':
            description: OK
            content:
              text/html:    
                schema:
                  $ref: "#/components/schemas/HomepageHtml"

  /editor:
    get:
      tags:
        - blogs
      description: '返回新增博客内容界面'
      operationId: getEditorView
      requestBody:
        required: true
        content:
          text/json:
            schema:
                type: "object"
                properties:
                  userId:
                    type: "string"
                  blogId:
                    type: "string"
      responses:
        '200':
          description: OK
          content:
            text/html:    
              schema:
                type: "string"
                example: "edit.html" 

    post:
      tags:
        - blogs
      description: '接受用户新增博客信息，并返回homepage页面'
      operationId: addblog
      requestBody:
        required: true
        content:
          text/json:
            schema:
              type: "object"
              properties:
                username:
                  type: "string"
                title:
                  type: "string"
                content:
                  type: "string"
      responses:
          '200':
            description: OK
            content:
              text/html:    
                schema:
                  $ref: "#/components/schemas/Editor"              
        
  /delete:
    get:
      tags:
        - blogs
      description: '接受删除blog的信息，并返回新的blog页面'
      operationId: deleteBlog
      requestBody:
        required: true
        content:
          text/json:
            schema:
                type: "object"
                properties:
                  userId:
                    type: "string"
                  blogId:
                    type: "string"
      responses:
        '200':
          description: OK
          content:
            text/html:    
              schema:
                $ref: "#/components/schemas/HomepageHtml"

  /update:
    get:
      tags:
        - blogs
      description: '返回更新页面'
      operationId: deleteBlog
      requestBody:
        required: true
        content:
          text/json:
            schema:
                type: "object"
                properties:
                  userId:
                    type: "string"
                  blogId:
                    type: "string"
      responses:
        '200':
          description: OK
          content:
            text/html:    
              schema:
                $ref: "#/components/schemas/UpdateHtml"
    post:
      tags:
        - blogs
      description: '接受用户输入更新的信息,并返回blog页面'
      operationId: updateBlog
      requestBody:
        required: true
        content:
          text/json:
            schema:
              type: "object"
              properties:
                username:
                  type: "string"
                blogId:
                  type: "string"
                title:
                  type: "string"
                content:
                  type: "string"
      responses:
        '200':
          description: OK
          content:
            text/html:    
              schema:
                $ref: "#/components/schemas/HomepageHtml"













components:  # ここに個別のスキーマ情報を書く
  schemas:
    Users:
      type: "object" # 对象是属性/值对的集合
      properties:  # 定义对象属性
        username:
          type: "string"
        password:
          type: "string"

    RegisterHtml:
      type: "string"
    Register:
      type: "object"
      properties:
        username:
          type: "string"
        password:
          type: "string"
        password_again:
          type: "string"

    LoginHtml:
      type: "string"
    Login:
      type: "object"
      properties:
        username:
          type: "string"
        password:
          type: "string"

    HomepageHtml:
      type: "object"
      properties:
        username:
          type: "string"
        blogs:
          type: array
          items:
            $ref: "#/components/schemas/Homepage"
        view:
          type: "string"
          example: "homepage.html"

    Homepage:
      type: "object"
      properties:
        userId:
          type: "string"
        title:
          type: "string"
        content:
          type: "string"      

    EditorHtml:
      type: "string"
    Editor:
      type: "object"
      properties:
        title: 
          type: "string"
        introduction:
          type: "string"
        story:
          type: "string"
        img:
          type: "string"
          format: "byte"
          description: Base64-encoded contents of the image

    UpdateHtml:
      type: "object"
      properties:
        userId:
          type: "string"
        username:
          type: "string"
        blog:
          type: "object"
          items:
            $ref: "#/components/schemas/Homepage"
        view:
          type: "string"
          example: "update.html"
            